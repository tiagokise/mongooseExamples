$ne 
DEFINITIONEXAMPLEDEFINITIONEXAMPLE

 The following examples query against the product collection with the following documents:

                            
{ _id: 1, itemDetails: { name: "ab", code: 123 }, quantity: 15, itemtags: [ "A", "B", "C" ] }
{ _id: 2, itemDetails: { name: "cd", code: 123 }, quantity: 20, itemtags: [ "B" ] }
{ _id: 3, itemDetails: { name: "ij", code: 456 }, quantity: 25, itemtags: [ "A", "B" ] }
{ _id: 4, itemDetails: { name: "xy", code: 456 }, quantity: 30, itemtags: [ "B", "A" ] }
{ _id: 5, itemDetails: { name: "mn", code: 000 }, quantity: 20, itemtags: [ [ "A", "B" ], "C" ] }
{ _id: 6, itemDetails: [{ name: "mn1", code: 111 },{ name: "mn2", code: 222 }], quantity: 200, itemtags: [ [ "A", "B" ], "C" ] }
                            
                            
 Consider the following example:

                            
db.product.find( { quantity: { $ne: 20 } } )           
                            
                            
This query will select all documents in the product collection where the quantity field value does not equal 20.

                            
{ _id: 1, itemDetails: { name: "ab", code: 123 }, quantity: 15, itemtags: [ "A", "B", "C" ] }
{ _id: 3, itemDetails: { name: "ij", code: 456 }, quantity: 25, itemtags: [ "A", "B" ] }
{ _id: 4, itemDetails: { name: "xy", code: 456 }, quantity: 30, itemtags: [ "B", "A" ] }
                            
                            
 Consider the following example to update the document using $ne:

                            
db.product.update( {  "itemDetails.code": { $ne: 111 } }, { $set: { quantity: 444 } } )          
                            
                            
This query will updated first document only

                            
{ _id: 1, itemDetails: { name: "ab", code: 123 }, quantity: 444, itemtags: [ "A", "B", "C" ] }
                            
                            
if we use {multi:true} then it updates all filtered document

 Consider the following example:

                            
db.product.update( {  "itemDetails.code": { $ne: 111 } }, { $set: { quantity: 444 } },{multi:true} )          
                            
                            
This query will updated all document filtered document

                            
{ _id: 1, itemDetails: { name: "ab", code: 123 }, quantity: 444, itemtags: [ "A", "B", "C" ] }
{ _id: 2, itemDetails: { name: "cd", code: 123 }, quantity: 444, itemtags: [ "B" ] }
{ _id: 3, itemDetails: { name: "ij", code: 456 }, quantity: 444, itemtags: [ "A", "B" ] }
{ _id: 4, itemDetails: { name: "xy", code: 456 }, quantity: 444, itemtags: [ "B", "A" ] }
{ _id: 5, itemDetails: { name: "mn", code: 000 }, quantity: 444, itemtags: [ [ "A", "B" ], "C" ] }