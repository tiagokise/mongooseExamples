$slice 

EFINITIONEXAMPLEDEFINITIONEXAMPLE


 The following examples query against the product collection with the following documents:

                            
{ _id: 1, itemDetails: [{ name: "ab", code: 380 }], quantity: 15, itemtags: [ "A", "B", "C" ] }
{ _id: 2, itemDetails: [{ name: "cd", code: 300 }], quantity: 20, itemtags: [ "B" ] }
{ _id: 3, itemDetails: [{ name: "ij", code: 456 }], quantity: 25, itemtags: [ "A", "B" ] }
{ _id: 4, itemDetails: [{ name: "xy", code: 456 }], quantity: 30, itemtags: [ "B", "A" ] }
{ _id: 5, itemDetails: [{ name: "mn", code: 600 }], quantity: 20, itemtags: [ [ "A", "B" ], "C" ] }
{ _id: 6, itemDetails: [{ name: "mn1", code: 111 },{ name: "mn2", code: 222 }], quantity: 20, itemtags: [ [ "A", "B" ], "C" ] }
                            
                            
 Consider the following example:

                            
db.getCollection('product').find( {},{ itemtags: { $slice: 1 } } )          
                            
                            
This output will be. it will return first array value from the itemtags

                            
{ _id: 1, itemDetails: [{ name: "ab", code: 380 }], quantity: 15, itemtags: [ "A"] }
{ _id: 2, itemDetails: [{ name: "cd", code: 300 }], quantity: 20, itemtags: [ "B" ] }
{ _id: 3, itemDetails: [{ name: "ij", code: 456 }], quantity: 25, itemtags: [ "A" ] }
{ _id: 4, itemDetails: [{ name: "xy", code: 456 }], quantity: 30, itemtags: [ "B"] }
{ _id: 5, itemDetails: [{ name: "mn", code: 600 }], quantity: 20, itemtags: [ [ "A", "B" ]] }
{ _id: 6, itemDetails: [{ name: "mn1", code: 111 },{ name: "mn2", code: 222 }], quantity: 20, itemtags: [ [ "A", "B" ] ] }

                            
                            
 Consider the following example:

                            
db.getCollection('product').find( {},{ itemtags: { $slice: -1 } } )          
                            
                            
This output will be. it will return last array value from the itemtags

                            
{ _id: 1, itemDetails: [{ name: "ab", code: 380 }], quantity: 15, itemtags: [ "C"] }
{ _id: 2, itemDetails: [{ name: "cd", code: 300 }], quantity: 20, itemtags: [ "B" ] }
{ _id: 3, itemDetails: [{ name: "ij", code: 456 }], quantity: 25, itemtags: [ "B" ] }
{ _id: 4, itemDetails: [{ name: "xy", code: 456 }], quantity: 30, itemtags: [ "A" ] }
{ _id: 5, itemDetails: [{ name: "mn", code: 600 }], quantity: 20, itemtags: [ "C" ] }
{ _id: 6, itemDetails: [{ name: "mn1", code: 111 },{ name: "mn2", code: 222 }], quantity: 20, itemtags: [ "C" ]  }

                            
                            
 Consider the following example it specify an array as an argument to $slice. Arrays take the form of [ skip , limit ], where the first value indicates the number of items in the array to skip and the second value indicates the number of items to return.

                            
db.getCollection('product').find( {},{ itemtags: { $slice:[2,1] } } )        
                            
                            
This output will be. it will return last array value from the itemtags

                            
{ _id: 1, itemDetails: [{ name: "ab", code: 380 }], quantity: 15, itemtags: [ "C"] }
{ _id: 2, itemDetails: [{ name: "cd", code: 300 }], quantity: 20, itemtags: [ ] }
{ _id: 3, itemDetails: [{ name: "ij", code: 456 }], quantity: 25, itemtags: [ ] }
{ _id: 4, itemDetails: [{ name: "xy", code: 456 }], quantity: 30, itemtags: [ ] }
{ _id: 5, itemDetails: [{ name: "mn", code: 600 }], quantity: 20, itemtags: [ ] }
{ _id: 6, itemDetails: [{ name: "mn1", code: 111 },{ name: "mn2", code: 222 }], quantity: 20, itemtags: [ ]  }