$set 

DEFINITIONEXAMPLEDEFINITIONEXAMPLE


 The following examples query against the product collection with the following documents:

                            
{ _id: 1, itemDetails: [{ name: "ab", code: 380 }], quantity: 15, itemtags: [ "A", "B", "C" ] }
{ _id: 2, itemDetails: [{ name: "cd", code: 300 }], quantity: 20, itemtags: [ "B" ] }
{ _id: 3, itemDetails: [{ name: "ij", code: 456 }], quantity: 25, itemtags: [ "A", "B" ] }
{ _id: 4, itemDetails: [{ name: "xy", code: 456 }], quantity: 30, itemtags: [ "B", "A" ] }
{ _id: 5, itemDetails: [{ name: "mn", code: 600 }], quantity: 20, itemtags: [ [ "A", "B" ], "C" ] }
{ _id: 6, itemDetails: [{ name: "mn1", code: 111 },{ name: "mn2", code: 222 }], quantity: 20, itemtags: [ [ "A", "B" ], "C" ] }
                            
                            
 Consider the following example:

                            
db.getCollection('product').update(
   { _id: 1,"itemDetails.name":"ab" },
   { $set: { quantity: 0, "itemDetails.$.code": 0 ,data:51} }
)   
                            
                            
The document will be updated by quantity with value 0 and itemdetails.code to 0. There is no data field to update so it insert a new field with value 51

                            
{ _id: 1, itemDetails: [{ name: "ab", code:0 }], quantity: 0, itemtags: [ "A", "B", "C" ], data:51 }